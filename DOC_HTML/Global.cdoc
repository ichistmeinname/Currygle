(CurryInfo (ModuleInfo "Global" "Michael Hanus" "Library for handling global entities.\nA global entity has a name declared in the program.\nIts value can be accessed and modified by IO actions.\nFurthermore, global entities can be declared as persistent so that\ntheir values are stored across different program executions.\n\nCurrently, it is still experimental so that its interface might\nbe slightly changed in the future.\n\nA global entity `g` with an initial value `v`\nof type `t` must be declared by:\n\n    g :: Global t\n    g = global v spec\n\nHere, the type `t` must not contain type variables and\n`spec` specifies the storage mechanism for the\nglobal entity (see type `GlobalSpec`).\n\n\n") [(FunctionInfo "global" (FuncType (TVar 0) (FuncType (TCons ("Global","GlobalSpec") []) (TCons ("Global","Global") [(TVar 0)]))) "Global" "<code>global</code> is only used for the declaration of a global value\nand should not be used elsewhere. In the future, it might become a keyword.\n" False UnknownFR),(FunctionInfo "readGlobal" (FuncType (TCons ("Global","Global") [(TVar 0)]) (TCons ("Prelude","IO") [(TVar 0)])) "Global" "Reads the current value of a global.\n" False UnknownFR),(FunctionInfo "writeGlobal" (FuncType (TCons ("Global","Global") [(TVar 0)]) (FuncType (TVar 0) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "Global" "Updates the value of a global.\nThe value is evaluated to a ground constructor term before it is updated.\n" False UnknownFR)] [(TypeInfo "Global" [] [0] "Global" "The type of a global entity.\n"),(TypeInfo "GlobalSpec" [(("Global","Temporary"),[]),(("Global","Persistent"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "Global" "The storage mechanism for the global entity.\n")])