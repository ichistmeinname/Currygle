(CurryInfo (ModuleInfo "Maybe" "Frank Huch (source from the corresponding Hugs module)\n        Bernd Brassel (sequence, mapM)" "Library with some useful functions on the Maybe datatype\n\n") [(FunctionInfo "isJust" (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (TCons ("Prelude","Bool") [])) "Maybe" [] False KnownFlex),(FunctionInfo "isNothing" (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (TCons ("Prelude","Bool") [])) "Maybe" [] False KnownFlex),(FunctionInfo "fromJust" (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (TVar 0)) "Maybe" [] False KnownFlex),(FunctionInfo "fromMaybe" (FuncType (TVar 0) (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (TVar 0))) "Maybe" [] False KnownFlex),(FunctionInfo "maybeToList" (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (TCons ("Prelude","[]") [(TVar 0)])) "Maybe" [] False KnownFlex),(FunctionInfo "listToMaybe" (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","Maybe") [(TVar 0)])) "Maybe" [] False KnownFlex),(FunctionInfo "catMaybes" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Maybe") [(TVar 0)])]) (TCons ("Prelude","[]") [(TVar 0)])) "Maybe" [] False UnknownFR),(FunctionInfo "mapMaybe" (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [(TVar 1)])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","[]") [(TVar 1)]))) "Maybe" [] False UnknownFR),(FunctionInfo ">>-" (FuncType (TCons ("Prelude","Maybe") [(TVar 0)]) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [(TVar 1)])) (TCons ("Prelude","Maybe") [(TVar 1)]))) "Maybe" "Monadic bind for Maybe.\nMaybe can be interpreted as a monad where Nothing is interpreted\nas the error case by this monadic binding.\n" False KnownFlex),(FunctionInfo "sequenceMaybe" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Maybe") [(TVar 0)])]) (TCons ("Prelude","Maybe") [(TCons ("Prelude","[]") [(TVar 0)])])) "Maybe" "monadic sequence for maybe\n" False KnownFlex),(FunctionInfo "mapMMaybe" (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [(TVar 1)])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","Maybe") [(TCons ("Prelude","[]") [(TVar 1)])]))) "Maybe" "monadic map for maybe\n" False UnknownFR)] [])