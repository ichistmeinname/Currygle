(CurryInfo (ModuleInfo "IO" "Michael Hanus, Bernd Brassel" "Library for IO operations like reading and writing files\nthat are not already contained in the prelude.\n\n") [(FunctionInfo "stdin" (TCons ("IO","Handle") []) "IO" "Standard input stream.\n" False UnknownFR),(FunctionInfo "stdout" (TCons ("IO","Handle") []) "IO" "Standard output stream.\n" False UnknownFR),(FunctionInfo "stderr" (TCons ("IO","Handle") []) "IO" "Standard error stream.\n" False UnknownFR),(FunctionInfo "openFile" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("IO","IOMode") []) (TCons ("Prelude","IO") [(TCons ("IO","Handle") [])]))) "IO" "Opens a file in specified mode and returns a handle to it.\n" False UnknownFR),(FunctionInfo "hClose" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "IO" "Closes a file handle and flushes the buffer in case of output file.\n" False UnknownFR),(FunctionInfo "hFlush" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "IO" "Flushes the buffer associated to handle in case of output file.\n" False UnknownFR),(FunctionInfo "hIsEOF" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])])) "IO" "Is handle at end of file?\n" False UnknownFR),(FunctionInfo "isEOF" (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])]) "IO" "Is standard input at end of file?\n" False UnknownFR),(FunctionInfo "hSeek" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("IO","SeekMode") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "IO" "Set the position of a handle to a seekable stream (e.g., a file).\nIf the second argument is <code>AbsoluteSeek</code>,\n<code>SeekFromEnd</code>, or <code>RelativeSeek</code>,\nthe position is set relative to the beginning of the file,\nto the end of the file, or to the current position, respectively.\n" False UnknownFR),(FunctionInfo "hWaitForInput" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])]))) "IO" "Waits until input is available on the given handle.\nIf no input is available within t milliseconds, it returns False,\notherwise it returns True.\n" False UnknownFR),(FunctionInfo "hWaitForInputs" (FuncType (TCons ("Prelude","[]") [(TCons ("IO","Handle") [])]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Int") [])]))) "IO" "Waits until input is available on some of the given handles.\nIf no input is available within t milliseconds, it returns -1,\notherwise it returns the index of the corresponding handle with the available\ndata.\n" False UnknownFR),(FunctionInfo "hWaitForInputOrMsg" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","Either") [(TCons ("IO","Handle") []),(TCons ("Prelude","[]") [(TVar 0)])])]))) "IO" "Waits until input is available on a given handles or a message\nin the message stream. Usually, the message stream comes from an external port.\nThus, this operation implements a committed choice over receiving input\nfrom an IO handle or an external port.\n\n<EM>Note that the implementation of this operation works only with\nSicstus-Prolog 3.8.5 or higher (due to a bug in previous versions\nof Sicstus-Prolog).</EM>\n\n" False UnknownFR),(FunctionInfo "hWaitForInputsOrMsg" (FuncType (TCons ("Prelude","[]") [(TCons ("IO","Handle") [])]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","Either") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TVar 0)])])]))) "IO" "Waits until input is available on some of the given handles or a message\nin the message stream. Usually, the message stream comes from an external port.\nThus, this operation implements a committed choice over receiving input\nfrom IO handles or an external port.\n\n<EM>Note that the implementation of this operation works only with\nSicstus-Prolog 3.8.5 or higher (due to a bug in previous versions\nof Sicstus-Prolog).</EM>\n\n" False UnknownFR),(FunctionInfo "hReady" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])])) "IO" "Checks whether an input is available on a given handle.\n" False UnknownFR),(FunctionInfo "hGetChar" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Char") [])])) "IO" "Reads a character from an input handle and returns it.\n" False UnknownFR),(FunctionInfo "hGetLine" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "IO" "Reads a line from an input handle and returns it.\n" False UnknownFR),(FunctionInfo "hGetContents" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "IO" "Reads the complete contents from an input handle and closes the input handle\nbefore returning the contents.\n" False UnknownFR),(FunctionInfo "getContents" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "IO" "Reads the complete contents from the standard input stream until EOF.\n" False UnknownFR),(FunctionInfo "hPutChar" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "IO" "Puts a character to an output handle.\n" False UnknownFR),(FunctionInfo "hPutStr" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "IO" "Puts a string to an output handle.\n" False KnownFlex),(FunctionInfo "hPutStrLn" (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "IO" "Puts a string with a newline to an output handle.\n" False UnknownFR),(FunctionInfo "hPrint" (FuncType (TCons ("IO","Handle") []) (FuncType (TVar 0) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "IO" "Converts a term into a string and puts it to an output handle.\n" False UnknownFR),(FunctionInfo "hIsReadable" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])])) "IO" "Is the handle readable?\n" False UnknownFR),(FunctionInfo "hIsWritable" (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Bool") [])])) "IO" "Is the handle writable?\n" False UnknownFR)] [(TypeInfo "Handle" [] [] "IO" "The abstract type of a handle for a stream.\n" False),(TypeInfo "IOMode" [(("IO","ReadMode"),[]),(("IO","WriteMode"),[]),(("IO","AppendMode"),[])] [] "IO" "The modes for opening a file.\n" False),(TypeInfo "SeekMode" [(("IO","AbsoluteSeek"),[]),(("IO","RelativeSeek"),[]),(("IO","SeekFromEnd"),[])] [] "IO" "The modes for positioning with <code>hSeek</code> in a file.\n" False)])