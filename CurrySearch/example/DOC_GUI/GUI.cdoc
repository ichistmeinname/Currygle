(CurryInfo (ModuleInfo "GUI" [] "Library for GUI programming in Curry (based on Tcl/Tk).\n[This paper](http://www.informatik.uni-kiel.de/~mh/papers/PADL00.html)\ncontains a description of the basic ideas behind this library.\n\nThis library is an improved and updated version of the library Tk.\nThe latter might not be supported in the future.\n\n") [(FunctionInfo "row" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])]) (TCons ("GUI","Widget") [])) "GUI" "Horizontal alignment of widgets.\n" False UnknownFR),(FunctionInfo "col" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])]) (TCons ("GUI","Widget") [])) "GUI" "Vertical alignment of widgets.\n" False UnknownFR),(FunctionInfo "matrix" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])])]) (TCons ("GUI","Widget") [])) "GUI" "Matrix alignment of widgets.\n" False UnknownFR),(FunctionInfo "debugTcl" (FuncType (TCons ("GUI","Widget") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "GUI" "Prints the generated Tcl commands of a main widget (useful for debugging).\n" False UnknownFR),(FunctionInfo "runPassiveGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","Widget") []) (TCons ("Prelude","IO") [(TCons ("GUI","GuiPort") [])]))) "GUI" "IO action to show a Widget in a new GUI window in passive mode,\ni.e., ignore all GUI events.\n" False UnknownFR),(FunctionInfo "runGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","Widget") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "GUI" "IO action to run a Widget in a new window.\n" False UnknownFR),(FunctionInfo "runGUIwithParams" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","Widget") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "IO action to run a Widget in a new window.\n" False UnknownFR),(FunctionInfo "runInitGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","Widget") []) (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "IO action to run a Widget in a new window. The GUI events\nare processed after executing an initial action on the GUI.\n" False UnknownFR),(FunctionInfo "runInitGUIwithParams" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","Widget") []) (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "GUI" "IO action to run a Widget in a new window. The GUI events\nare processed after executing an initial action on the GUI.\n" False UnknownFR),(FunctionInfo "runControlledGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("GUI","Widget") []),(FuncType (TVar 0) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Runs a Widget in a new GUI window and process GUI events.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runConfigControlledGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("GUI","Widget") []),(FuncType (TVar 0) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])])))]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Runs a Widget in a new GUI window and process GUI events.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runInitControlledGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("GUI","Widget") []),(FuncType (TVar 0) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))]) (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "GUI" "Runs a Widget in a new GUI window and process GUI events\nafter executing an initial action on the GUI window.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runHandlesControlledGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("GUI","Widget") []),(TCons ("Prelude","[]") [(FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))])]) (FuncType (TCons ("Prelude","[]") [(TCons ("IO","Handle") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Runs a Widget in a new GUI window and process GUI events.\nIn addition, a list of event handlers is provided that process\ninputs received from a corresponding list of handles to input streams.\nThus, if the i-th handle has some data available, the i-th event handler\nis executed with the i-th handle as a parameter.\nThis operation is useful to run a GUI that should react on\ninputs provided by other processes, e.g., via sockets.\n" False UnknownFR),(FunctionInfo "runInitHandlesControlledGUI" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("GUI","Widget") []),(TCons ("Prelude","[]") [(FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))])]) (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (FuncType (TCons ("Prelude","[]") [(TCons ("IO","Handle") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "GUI" "Runs a Widget in a new GUI window and process GUI events\nafter executing an initial action on the GUI window.\nIn addition, a list of event handlers is provided that process\ninputs received from a corresponding list of handles to input streams.\nThus, if the i-th handle has some data available, the i-th event handler\nis executed with the i-th handle as a parameter.\nThis operation is useful to run a GUI that should react on\ninputs provided by other processes, e.g., via sockets.\n" False KnownFlex),(FunctionInfo "setConfig" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","ConfItem") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Changes the current configuration of a widget\n(deprecated operation, only included for backward compatibility).\nWarning: does not work for Command options!\n" False KnownFlex),(FunctionInfo "exitGUI" (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "GUI" "An event handler for terminating the GUI.\n" False UnknownFR),(FunctionInfo "getValue" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]))) "GUI" "Gets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "setValue" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Sets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "updateValue" (FuncType (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Updates the (String) value of a variable w.r.t. to an update function.\n" False UnknownFR),(FunctionInfo "appendValue" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Appends a String value to the contents of a TextEdit widget and\nadjust the view to the end of the TextEdit widget.\n" False ConflictFR),(FunctionInfo "appendStyledValue" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","Style") [])]) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "GUI" "Appends a String value with style tags to the contents of a TextEdit widget\nand adjust the view to the end of the TextEdit widget.\nDifferent styles can be combined, e.g., to get bold blue text on a \nred background. If <code>Bold</code>, <code>Italic</code> and \n<code>Underline</code> are combined, currently all but one of these are \nignored.\nThis is an experimental function and might be changed in the future.\n" False ConflictFR),(FunctionInfo "addRegionStyle" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("GUI","Style") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))))) "GUI" "Adds a style value in a region of a TextEdit widget.\nThe region is specified a start and end position similarly\nto <code>getCursorPosition</code>.\nDifferent styles can be combined, e.g., to get bold blue text on a \nred background. If <code>Bold</code>, <code>Italic</code> and \n<code>Underline</code> are combined, currently all but one of these are \nignored.\nThis is an experimental function and might be changed in the future.\n" False ConflictFR),(FunctionInfo "removeRegionStyle" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("GUI","Style") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))))) "GUI" "Removes a style value in a region of a TextEdit widget.\nThe region is specified a start and end position similarly\nto <code>getCursorPosition</code>.\nThis is an experimental function and might be changed in the future.\n" False ConflictFR),(FunctionInfo "getCursorPosition" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]))) "GUI" "Get the position (line,column) of the insertion cursor in a TextEdit\nwidget. Lines are numbered from 1 and columns are numbered from 0.\n" False ConflictFR),(FunctionInfo "seeText" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Adjust the view of a TextEdit widget so that the specified line/column\ncharacter is visible.\nLines are numbered from 1 and columns are numbered from 0.\n" False ConflictFR),(FunctionInfo "focusInput" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "GUI" "Sets the input focus of this GUI to the widget referred by the first\nargument.\nThis is useful for automatically selecting input entries in an application.\n" False KnownFlex),(FunctionInfo "addCanvas" (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","CanvasItem") [])]) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "GUI" "Adds a list of canvas items to a canvas referred by the first argument.\n" False KnownFlex),(FunctionInfo "popup_message" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "GUI" "A simple popup message.\n" False UnknownFR),(FunctionInfo "Cmd" (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (TCons ("GUI","ConfItem") [])) "GUI" "A simple event handler that can be associated to a widget.\nThe event handler takes a GUI port as parameter in order to\nread or write values from/into the GUI.\n" False UnknownFR),(FunctionInfo "Command" (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])])) (TCons ("GUI","ConfItem") [])) "GUI" "An event handler that can be associated to a widget.\nThe event handler takes a GUI port as parameter (in order to\nread or write values from/into the GUI) and returns a list\nof widget reference/configuration pairs\nwhich is applied after the handler in order to configure some GUI widgets.\n" False UnknownFR),(FunctionInfo "Button" (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") []))) "GUI" "A button with an associated event handler which is activated\nif the button is pressed.\n" False UnknownFR),(FunctionInfo "ConfigButton" (FuncType (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])])) (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") []))) "GUI" "A button with an associated event handler which is activated\nif the button is pressed. The event handler is a configuration handler\n(see Command) that allows the configuration of some widgets.\n" False UnknownFR),(FunctionInfo "TextEditScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") [])) "GUI" "A text edit widget with vertical and horizontal scrollbars.\nThe argument contains the configuration options for the text edit widget.\n" False UnknownFR),(FunctionInfo "ListBoxScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") [])) "GUI" "A list box widget with vertical and horizontal scrollbars.\nThe argument contains the configuration options for the list box widget.\n" False UnknownFR),(FunctionInfo "CanvasScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") [])) "GUI" "A canvas widget with vertical and horizontal scrollbars.\nThe argument contains the configuration options for the text edit widget.\n" False UnknownFR),(FunctionInfo "EntryScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])]) (TCons ("GUI","Widget") [])) "GUI" "An entry widget with a horizontal scrollbar.\nThe argument contains the configuration options for the entry widget.\n" False UnknownFR),(FunctionInfo "getOpenFile" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "GUI" "Pops up a GUI for selecting an existing file.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "getOpenFileWithTypes" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "GUI" "Pops up a GUI for selecting an existing file. The parameter is\na list of pairs of file types that could be selected.\nA file type pair consists of a name and an extension for that file type.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "getSaveFile" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "GUI" "Pops up a GUI for choosing a file to save some data.\nIf the user chooses an existing file, she/he will asked to confirm\nto overwrite it.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "getSaveFileWithTypes" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "GUI" "Pops up a GUI for choosing a file to save some data. The parameter is\na list of pairs of file types that could be selected.\nA file type pair consists of a name and an extension for that file type.\nIf the user chooses an existing file, she/he will asked to confirm\nto overwrite it.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "chooseColor" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "GUI" "Pops up a GUI dialog box to select a color.\nThe name of the color will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR)] [(TypeInfo "GuiPort" [] [] "GUI" "The port to a GUI is just the stream connection to a GUI\nwhere Tcl/Tk communication is done.\n" False),(TypeInfo "Widget" [(("GUI","PlainButton"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Canvas"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","CheckButton"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Entry"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Label"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","ListBox"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Message"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","MenuButton"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Scale"),[(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","ScrollH"),[(TCons ("GUI","WidgetRef") []),(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","ScrollV"),[(TCons ("GUI","WidgetRef") []),(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","TextEdit"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfItem") [])])]),(("GUI","Row"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])])]),(("GUI","Col"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])])]),(("GUI","Matrix"),[(TCons ("Prelude","[]") [(TCons ("GUI","ConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("GUI","Widget") [])])])])] [] "GUI" "The type of possible widgets in a GUI.\n" False),(TypeInfo "ConfItem" [(("GUI","Active"),[(TCons ("Prelude","Bool") [])]),(("GUI","Anchor"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","Background"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","Foreground"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","Handler"),[(TCons ("GUI","Event") []),(FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])]))]),(("GUI","Height"),[(TCons ("Prelude","Int") [])]),(("GUI","CheckInit"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","CanvasItems"),[(TCons ("Prelude","[]") [(TCons ("GUI","CanvasItem") [])])]),(("GUI","List"),[(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]),(("GUI","Menu"),[(TCons ("Prelude","[]") [(TCons ("GUI","MenuItem") [])])]),(("GUI","WRef"),[(TCons ("GUI","WidgetRef") [])]),(("GUI","Text"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","Width"),[(TCons ("Prelude","Int") [])]),(("GUI","Fill"),[]),(("GUI","FillX"),[]),(("GUI","FillY"),[]),(("GUI","TclOption"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "GUI" "The data type for possible configurations of a widget.\n" False),(TypeInfo "ReconfigureItem" [(("GUI","WidgetConf"),[(TCons ("GUI","WidgetRef") []),(TCons ("GUI","ConfItem") [])]),(("GUI","StreamHandler"),[(TCons ("IO","Handle") []),(FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])])))]),(("GUI","RemoveStreamHandler"),[(TCons ("IO","Handle") [])])] [] "GUI" "Data type for describing configurations that are applied\nto a widget or GUI by some event handler.\n" False),(TypeInfo "Event" [(("GUI","DefaultEvent"),[]),(("GUI","MouseButton1"),[]),(("GUI","MouseButton2"),[]),(("GUI","MouseButton3"),[]),(("GUI","KeyPress"),[]),(("GUI","Return"),[])] [] "GUI" "The data type of possible events on which handlers can react.\nThis list is still incomplete and might be extended or restructured\nin future releases of this library.\n" False),(TypeInfo "ConfCollection" [(("GUI","CenterAlign"),[]),(("GUI","LeftAlign"),[]),(("GUI","RightAlign"),[]),(("GUI","TopAlign"),[]),(("GUI","BottomAlign"),[])] [] "GUI" "The data type for possible configurations of widget collections\n(e.g., columns, rows).\n" False),(TypeInfo "MenuItem" [(("GUI","MButton"),[(FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("GUI","ReconfigureItem") [])])])),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","MSeparator"),[]),(("GUI","MMenuButton"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("GUI","MenuItem") [])])])] [] "GUI" "The data type for specifying items in a menu.\n" False),(TypeInfo "CanvasItem" [(("GUI","CLine"),[(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","CPolygon"),[(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","CRectangle"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","COval"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("GUI","CText"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "GUI" "The data type of items in a canvas.\nThe last argument are further options in Tcl/Tk (for testing).\n" False),(TypeInfo "WidgetRef" [] [] "GUI" "The (hidden) data type of references to a widget in a GUI window.\nNote that the constructor WRefLabel will not be exported so that values\ncan only be created inside this module.\n" False),(TypeInfo "Style" [(("GUI","Bold"),[]),(("GUI","Italic"),[]),(("GUI","Underline"),[]),(("GUI","Fg"),[(TCons ("GUI","Color") [])]),(("GUI","Bg"),[(TCons ("GUI","Color") [])])] [] "GUI" "The data type of possible text styles.\n" False),(TypeInfo "Color" [(("GUI","Black"),[]),(("GUI","Blue"),[]),(("GUI","Brown"),[]),(("GUI","Cyan"),[]),(("GUI","Gold"),[]),(("GUI","Gray"),[]),(("GUI","Green"),[]),(("GUI","Magenta"),[]),(("GUI","Navy"),[]),(("GUI","Orange"),[]),(("GUI","Pink"),[]),(("GUI","Purple"),[]),(("GUI","Red"),[]),(("GUI","Tomato"),[]),(("GUI","Turquoise"),[]),(("GUI","Violet"),[]),(("GUI","White"),[]),(("GUI","Yellow"),[])] [] "GUI" "The data type of possible colors.\n" False)])