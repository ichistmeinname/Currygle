(CurryInfo (ModuleInfo "HTML" "October 2011" "Michael Hanus (with extensions by Bernd Brassel and Marco Comini)" ["Char","Distribution","HtmlCgi","IO","List","NamedSocket","Prelude","Profile","ReadNumeric","ReadShowTerm","System","Time","Unsafe"] "Library for HTML and CGI programming.\n[This paper](http://www.informatik.uni-kiel.de/~mh/papers/PADL01.html)\ncontains a description of the basic ideas behind this library.\n\nThe installation of a cgi script written with this library\ncan be done by the command\n\n    makecurrycgi -m initialForm -o /home/joe/public_html/prog.cgi prog\n\nwhere `prog` is the name of the Curry program with\nthe cgi script, `/home/joe/public_html/prog.cgi` is\nthe desired location of the\ncompiled cgi script, and `initialForm` is the Curry expression\n(of type IO HtmlForm) computing the HTML form (where makecurrycgi\nis a shell script stored in *pakcshome*/bin).\n\n") [(FunctionInfo "defaultEncoding" (("HTML","defaultEncoding"),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) "HTML" "The default encoding used in generated web pages.\n" False UnknownFR),(FunctionInfo "defaultBackground" (("HTML","defaultBackground"),(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "HTML" "The default background for generated web pages.\n" False UnknownFR),(FunctionInfo "idOfCgiRef" (("HTML","idOfCgiRef"),(FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Internal identifier of a CgiRef (intended only for internal use in other\nlibraries!).\n" False KnownFlex),(FunctionInfo "HtmlElem" (("HTML","HtmlElem"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A single HTML element with a tag, attributes, but no contents\n(deprecated, included only for backward compatibility).\n" False UnknownFR),(FunctionInfo "formEnc" (("HTML","formEnc"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","FormParam") []))) "HTML" "An encoding scheme for a HTML form.\n" False UnknownFR),(FunctionInfo "formCSS" (("HTML","formCSS"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","FormParam") []))) "HTML" "A URL for a CSS file for a HTML form.\n" False UnknownFR),(FunctionInfo "form" (("HTML","form"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlForm") [])))) "HTML" "A basic HTML form for active web pages with the default encoding\nand a default background.\n" False UnknownFR),(FunctionInfo "Form" (("HTML","Form"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlForm") [])))) "HTML" "A basic HTML form for active web pages\n(deprecated, included only for backward compatibility).\n" False UnknownFR),(FunctionInfo "standardForm" (("HTML","standardForm"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlForm") [])))) "HTML" "A standard HTML form for active web pages where the title is included\nin the body as the first header.\n" False UnknownFR),(FunctionInfo "cookieForm" (("HTML","cookieForm"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlForm") []))))) "HTML" "An HTML form with simple cookies.\nThe cookies are sent to the client's browser together with this form.\n" False UnknownFR),(FunctionInfo "addCookies" (("HTML","addCookies"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (FuncType (TCons ("HTML","HtmlForm") []) (TCons ("HTML","HtmlForm") [])))) "HTML" "Add simple cookie to HTML form.\nThe cookies are sent to the client's browser together with this form.\n" False KnownFlex),(FunctionInfo "answerText" (("HTML","answerText"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlForm") []))) "HTML" "A textual result instead of an HTML form as a result for active web pages.\n" False UnknownFR),(FunctionInfo "answerEncText" (("HTML","answerEncText"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlForm") [])))) "HTML" "A textual result instead of an HTML form as a result for active web pages\nwhere the encoding is given as the first parameter.\n" False UnknownFR),(FunctionInfo "addFormParam" (("HTML","addFormParam"),(FuncType (TCons ("HTML","HtmlForm") []) (FuncType (TCons ("HTML","FormParam") []) (TCons ("HTML","HtmlForm") [])))) "HTML" "Adds a parameter to an HTML form.\n" False KnownFlex),(FunctionInfo "redirect" (("HTML","redirect"),(FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("HTML","HtmlForm") []) (TCons ("HTML","HtmlForm") []))))) "HTML" "Adds redirection to given HTML form.\n" False UnknownFR),(FunctionInfo "expires" (("HTML","expires"),(FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("HTML","HtmlForm") []) (TCons ("HTML","HtmlForm") [])))) "HTML" "Adds expire time to given HTML form.\n" False UnknownFR),(FunctionInfo "addSound" (("HTML","addSound"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("HTML","HtmlForm") []) (TCons ("HTML","HtmlForm") []))))) "HTML" "Adds sound to given HTML form. The functions adds two different declarations\nfor sound, one invented by Microsoft for the internet explorer, one introduced\nfor netscape. As neither is an official part of HTML, addsound might not work \non all systems and browsers. The greatest chance is by using sound files \nin MID-format.\n" False ConflictFR),(FunctionInfo "pageEnc" (("HTML","pageEnc"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","PageParam") []))) "HTML" "An encoding scheme for a HTML page.\n" False UnknownFR),(FunctionInfo "pageCSS" (("HTML","pageCSS"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","PageParam") []))) "HTML" "A URL for a CSS file for a HTML page.\n" False UnknownFR),(FunctionInfo "page" (("HTML","page"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlPage") [])))) "HTML" "A basic HTML web page with the default encoding.\n" False UnknownFR),(FunctionInfo "standardPage" (("HTML","standardPage"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlPage") [])))) "HTML" "A standard HTML web page where the title is included\nin the body as the first header.\n" False UnknownFR),(FunctionInfo "addPageParam" (("HTML","addPageParam"),(FuncType (TCons ("HTML","HtmlPage") []) (FuncType (TCons ("HTML","PageParam") []) (TCons ("HTML","HtmlPage") [])))) "HTML" "Adds a parameter to an HTML page.\n" False KnownFlex),(FunctionInfo "htxt" (("HTML","htxt"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Basic text as HTML expression.\nThe text may contain special HTML chars (like &lt;,&gt;,&amp;,&quot;)\nwhich will be quoted so that they appear as in the parameter string.\n" False UnknownFR),(FunctionInfo "htxts" (("HTML","htxts"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]))) "HTML" "A list of strings represented as a list of HTML expressions.\nThe strings may contain special HTML chars that will be quoted.\n" False UnknownFR),(FunctionInfo "hempty" (("HTML","hempty"),(TCons ("HTML","HtmlExp") [])) "HTML" "An empty HTML expression.\n" False UnknownFR),(FunctionInfo "nbsp" (("HTML","nbsp"),(TCons ("HTML","HtmlExp") [])) "HTML" "Non breaking Space\n" False UnknownFR),(FunctionInfo "h1" (("HTML","h1"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Header 1\n" False UnknownFR),(FunctionInfo "h2" (("HTML","h2"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Header 2\n" False UnknownFR),(FunctionInfo "h3" (("HTML","h3"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Header 3\n" False UnknownFR),(FunctionInfo "h4" (("HTML","h4"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Header 4\n" False UnknownFR),(FunctionInfo "h5" (("HTML","h5"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Header 5\n" False UnknownFR),(FunctionInfo "par" (("HTML","par"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Paragraph\n" False UnknownFR),(FunctionInfo "emphasize" (("HTML","emphasize"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Emphasize\n" False UnknownFR),(FunctionInfo "bold" (("HTML","bold"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Boldface\n" False UnknownFR),(FunctionInfo "italic" (("HTML","italic"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Italic\n" False UnknownFR),(FunctionInfo "code" (("HTML","code"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Program code\n" False UnknownFR),(FunctionInfo "center" (("HTML","center"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Centered text\n" False UnknownFR),(FunctionInfo "blink" (("HTML","blink"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Blinking text\n" False UnknownFR),(FunctionInfo "teletype" (("HTML","teletype"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Teletype font\n" False UnknownFR),(FunctionInfo "pre" (("HTML","pre"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Unformatted input, i.e., keep spaces and line breaks and\ndon't quote special characters.\n" False UnknownFR),(FunctionInfo "verbatim" (("HTML","verbatim"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Verbatim (unformatted), special characters (&lt;,&gt;,&amp;,&quot;)\nare quoted.\n" False UnknownFR),(FunctionInfo "address" (("HTML","address"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Address\n" False UnknownFR),(FunctionInfo "href" (("HTML","href"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Hypertext reference\n" False UnknownFR),(FunctionInfo "anchor" (("HTML","anchor"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "An anchor for hypertext reference inside a document\n" False UnknownFR),(FunctionInfo "ulist" (("HTML","ulist"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Unordered list\n" False UnknownFR),(FunctionInfo "olist" (("HTML","olist"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Ordered list\n" False UnknownFR),(FunctionInfo "litem" (("HTML","litem"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "A single list item (usually not explicitly used)\n" False UnknownFR),(FunctionInfo "dlist" (("HTML","dlist"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Description list\n" False UnknownFR),(FunctionInfo "table" (("HTML","table"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Table with a matrix of items where each item is a list of HTML expressions.\n" False UnknownFR),(FunctionInfo "headedTable" (("HTML","headedTable"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Similar to <code>table</code> but introduces header tags for the first row.\n" False UnknownFR),(FunctionInfo "addHeadings" (("HTML","addHeadings"),(FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Add a row of items (where each item is a list of HTML expressions)\nas headings to a table. If the first argument is not a table,\nthe headings are ignored.\n" False KnownRigid),(FunctionInfo "hrule" (("HTML","hrule"),(TCons ("HTML","HtmlExp") [])) "HTML" "Horizontal rule\n" False UnknownFR),(FunctionInfo "breakline" (("HTML","breakline"),(TCons ("HTML","HtmlExp") [])) "HTML" "Break a line\n" False UnknownFR),(FunctionInfo "image" (("HTML","image"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Image\n" False UnknownFR),(FunctionInfo "styleSheet" (("HTML","styleSheet"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Defines a style sheet to be used in this HTML document.\n" False UnknownFR),(FunctionInfo "style" (("HTML","style"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Provides a style for HTML elements.\nThe style argument is the name of a style class defined in a\nstyle definition (see <code>styleSheet</code>) or in an\nexternal style sheet (see form and page parameters <code>FormCSS</code>\nand <code>PageCSS</code>).\n" False UnknownFR),(FunctionInfo "textstyle" (("HTML","textstyle"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Provides a style for a basic text.\nThe style argument is the name of a style class defined in an\nexternal style sheet.\n" False UnknownFR),(FunctionInfo "blockstyle" (("HTML","blockstyle"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Provides a style for a block of HTML elements.\nThe style argument is the name of a style class defined in an\nexternal style sheet. This element is used (in contrast to \"style\")\nfor larger blocks of HTML elements since a line break is placed\nbefore and after these elements.\n" False UnknownFR),(FunctionInfo "inline" (("HTML","inline"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Joins a list of HTML elements into a single HTML element.\nAlthough this construction has no rendering, it is sometimes useful\nfor programming when several HTML elements must be put together.\n" False UnknownFR),(FunctionInfo "block" (("HTML","block"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Joins a list of HTML elements into a block.\nA line break is placed before and after these elements.\n" False UnknownFR),(FunctionInfo "button" (("HTML","button"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])])) (TCons ("HTML","HtmlExp") [])))) "HTML" "Submit button with a label string and an event handler\n" False UnknownFR),(FunctionInfo "resetbutton" (("HTML","resetbutton"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") []))) "HTML" "Reset button with a label string\n" False UnknownFR),(FunctionInfo "imageButton" (("HTML","imageButton"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])])) (TCons ("HTML","HtmlExp") [])))) "HTML" "Submit button in form of an imag.\n" False UnknownFR),(FunctionInfo "textfield" (("HTML","textfield"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Input text field with a reference and an initial contents\n" False UnknownFR),(FunctionInfo "password" (("HTML","password"),(FuncType (TCons ("HTML","CgiRef") []) (TCons ("HTML","HtmlExp") []))) "HTML" "Input text field (where the entered text is obscured) with a reference\n" False UnknownFR),(FunctionInfo "textarea" (("HTML","textarea"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") []))))) "HTML" "Input text area with a reference, height/width, and initial contents\n" False KnownFlex),(FunctionInfo "checkbox" (("HTML","checkbox"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A checkbox with a reference and a value.\nThe value is returned if checkbox is on, otherwise \"\" is returned.\n" False UnknownFR),(FunctionInfo "checkedbox" (("HTML","checkedbox"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A checkbox that is initially checked with a reference and a value.\nThe value is returned if checkbox is on, otherwise \"\" is returned.\n" False UnknownFR),(FunctionInfo "radio_main" (("HTML","radio_main"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A main button of a radio (initially \"on\") with a reference and a value.\nThe value is returned of this button is on.\nA complete radio button suite always consists of a main button\n(radio_main) and some further buttons (radio_others) with the\nsame reference. Initially, the main button is selected\n(or nothing is selected if one uses radio_main_off instead of radio_main).\nThe user can select another button but always at most one button\nof the radio can be selected. The value corresponding to the\nselected button is returned in the environment for this radio reference.\n" False UnknownFR),(FunctionInfo "radio_main_off" (("HTML","radio_main_off"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A main button of a radio (initially \"off\") with a reference and a value.\nThe value is returned of this button is on.\n" False UnknownFR),(FunctionInfo "radio_other" (("HTML","radio_other"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A further button of a radio (initially \"off\") with a reference (identical\nto the main button of this radio) and a value.\nThe value is returned of this button is on.\n" False UnknownFR),(FunctionInfo "selection" (("HTML","selection"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A selection button with a reference and a list of name/value pairs.\nThe names are shown in the selection and the value is returned\nfor the selected name.\n" False UnknownFR),(FunctionInfo "selectionInitial" (("HTML","selectionInitial"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (FuncType (TCons ("Prelude","Int") []) (TCons ("HTML","HtmlExp") []))))) "HTML" "A selection button with a reference, a list of name/value pairs,\nand a preselected item in this list.\nThe names are shown in the selection and the value is returned\nfor the selected name.\n" False UnknownFR),(FunctionInfo "multipleSelection" (("HTML","multipleSelection"),(FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","Bool") [])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A selection button with a reference and a list of name/value/flag pairs.\nThe names are shown in the selection and the value is returned\nif the corresponding name is selected. If flag is True, the\ncorresonding name is initially selected. If more than one name\nhas been selected, all values are returned in one string\nwhere the values are separated by newline (`'\\n'`) characters.\n" False UnknownFR),(FunctionInfo "hiddenfield" (("HTML","hiddenfield"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "A hidden field to pass a value referenced by a fixed name.\nThis function should be used with care since it may cause\nconflicts with the CGI-based implementation of this library.\n" False UnknownFR),(FunctionInfo "htmlQuote" (("HTML","htmlQuote"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Quotes special characters (`<`,`>`,`&`,`\"`, umlauts) in a string\nas HTML special characters.\n" False ConflictFR),(FunctionInfo "htmlIsoUmlauts" (("HTML","htmlIsoUmlauts"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Translates umlauts in iso-8859-1 encoding into HTML special characters.\n" False ConflictFR),(FunctionInfo "addAttr" (("HTML","addAttr"),(FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Adds an attribute (name/value pair) to an HTML element.\n" False UnknownFR),(FunctionInfo "addAttrs" (("HTML","addAttrs"),(FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("HTML","HtmlExp") [])))) "HTML" "Adds a list of attributes (name/value pair) to an HTML element.\n" False KnownFlex),(FunctionInfo "showHtmlExps" (("HTML","showHtmlExps"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms a list of HTML expressions into string representation.\n" False UnknownFR),(FunctionInfo "showHtmlExp" (("HTML","showHtmlExp"),(FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms a single HTML expression into string representation.\n" False UnknownFR),(FunctionInfo "showHtmlDoc" (("HTML","showHtmlDoc"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])))) "HTML" "Transforms HTML expressions into string representation of complete\nHTML document with title\n(deprecated, included only for backward compatibility).\n" False UnknownFR),(FunctionInfo "showHtmlDocCSS" (("HTML","showHtmlDocCSS"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))))) "HTML" "Transforms HTML expressions into string representation of complete\nHTML document with title and a URL for a style sheet file\n(deprecated, included only for backward compatibility).\n" False UnknownFR),(FunctionInfo "showHtmlPage" (("HTML","showHtmlPage"),(FuncType (TCons ("HTML","HtmlPage") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms HTML page into string representation.\n" False KnownFlex),(FunctionInfo "getUrlParameter" (("HTML","getUrlParameter"),(TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "HTML" "Gets the parameter attached to the URL of the script.\nFor instance, if the script is called with URL\n\"http://.../script.cgi?parameter\", then \"parameter\" is\nreturned by this I/O action.\nNote that an URL parameter should be \"URL encoded\" to avoid\nthe appearance of characters with a special meaning.\nUse the functions \"urlencoded2string\" and \"string2urlencoded\"\nto decode and encode such parameters, respectively.\n" False UnknownFR),(FunctionInfo "urlencoded2string" (("HTML","urlencoded2string"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Translates urlencoded string into equivalent ASCII string.\n" False ConflictFR),(FunctionInfo "string2urlencoded" (("HTML","string2urlencoded"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Translates arbitrary strings into equivalent urlencoded string.\n" False ConflictFR),(FunctionInfo "getCookies" (("HTML","getCookies"),(TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])])) "HTML" "Gets the cookies sent from the browser for the current CGI script.\nThe cookies are represented in the form of name/value pairs since\nno other components are important here.\n" False UnknownFR),(FunctionInfo "coordinates" (("HTML","coordinates"),(FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (TCons ("Prelude","Maybe") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]))) "HTML" "For image buttons: retrieve the coordinates where the user clicked\nwithin the image.\n" False KnownRigid),(FunctionInfo "runFormServerWithKey" (("HTML","runFormServerWithKey"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "HTML" "The server implementing an HTML form (possibly containing input fields).\nIt receives a message containing the environment of the client's\nweb browser, translates the HTML form w.r.t. this environment\ninto a string representation of the complete HTML document\nand sends the string representation back to the client's browser\nby binding the corresponding message argument.\n" False UnknownFR),(FunctionInfo "runFormServerWithKeyAndFormParams" (("HTML","runFormServerWithKeyAndFormParams"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("HTML","FormParam") [])]) (FuncType (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))))) "HTML" "The server implementing an HTML form (possibly containing input fields).\nIt receives a message containing the environment of the client's\nweb browser, translates the HTML form w.r.t. this environment\ninto a string representation of the complete HTML document\nand sends the string representation back to the client's browser\nby binding the corresponding message argument.\n" False UnknownFR),(FunctionInfo "showLatexExps" (("HTML","showLatexExps"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms HTML expressions into LaTeX string representation.\n" False UnknownFR),(FunctionInfo "showLatexExp" (("HTML","showLatexExp"),(FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms an HTML expression into LaTeX string representation.\n" False ConflictFR),(FunctionInfo "htmlSpecialChars2tex" (("HTML","htmlSpecialChars2tex"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Convert special HTML characters into their LaTeX representation,\nif necessary.\n" False ConflictFR),(FunctionInfo "showLatexDoc" (("HTML","showLatexDoc"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms HTML expressions into a string representation of a complete\nLaTeX document.\n" False UnknownFR),(FunctionInfo "showLatexDocWithPackages" (("HTML","showLatexDocWithPackages"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])))) "HTML" "Transforms HTML expressions into a string representation of a complete\nLaTeX document.\nThe variable \"packages\" holds the packages to add to the latex document\ne.g. \"ngerman\"\n" False UnknownFR),(FunctionInfo "showLatexDocs" (("HTML","showLatexDocs"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "Transforms a list of HTML expressions into a string representation\nof a complete LaTeX document where each list entry appears\non a separate page.\n" False UnknownFR),(FunctionInfo "showLatexDocsWithPackages" (("HTML","showLatexDocsWithPackages"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])))) "HTML" "Transforms a list of HTML expressions into a string representation\nof a complete LaTeX document where each list entry appears\non a separate page.\nThe variable \"packages\" holds the packages to add to the latex document\n(e.g., \"ngerman\").\n" False UnknownFR),(FunctionInfo "germanLatexDoc" (("HTML","germanLatexDoc"),(FuncType (TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))) "HTML" "show german latex document\n" False UnknownFR),(FunctionInfo "intForm" (("HTML","intForm"),(FuncType (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "HTML" "Execute an HTML form in \"interactive\" mode.\n" False UnknownFR),(FunctionInfo "intFormMain" (("HTML","intFormMain"),(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))))))) "HTML" "Execute an HTML form in \"interactive\" mode with various parameters.\n" False UnknownFR)] [(TypeInfo "CgiEnv" [(("HTML","CgiEnv"),[(FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))])] [] "HTML" "The type for representing cgi environments\n(i.e., mappings from cgi references to the corresponding values of\nthe input elements).\n"),(TypeInfo "HtmlHandler" [(("HTML","HtmlHandler"),[(FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]))])] [] "HTML" "The type of event handlers in HTML forms.\n"),(TypeInfo "CgiRef" [] [] "HTML" "The (abstract) data type for representing references to input elements\nin HTML forms.\n"),(TypeInfo "HtmlExp" [(("HTML","HtmlText"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","HtmlStruct"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]),(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]),(("HTML","HtmlCRef"),[(TCons ("HTML","HtmlExp") []),(TCons ("HTML","CgiRef") [])]),(("HTML","HtmlEvent"),[(TCons ("HTML","HtmlExp") []),(FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (TCons ("Prelude","IO") [(TCons ("HTML","HtmlForm") [])]))])] [] "HTML" "The data type for representing HTML expressions.\n"),(TypeInfo "HtmlForm" [(("HTML","HtmlForm"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","FormParam") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])]),(("HTML","HtmlAnswer"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "HTML" "The data type for representing HTML forms (active web pages)\nand return values of HTML forms.\n"),(TypeInfo "FormParam" [(("HTML","FormCookie"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","CookieParam") [])])]),(("HTML","FormCSS"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","FormJScript"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","FormOnSubmit"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","FormTarget"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","FormEnc"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","HeadInclude"),[(TCons ("HTML","HtmlExp") [])]),(("HTML","MultipleHandlers"),[]),(("HTML","BodyAttr"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])] [] "HTML" "The possible parameters of an HTML form.\nThe parameters of a cookie (FormCookie) are its name and value and\noptional parameters (expiration date, domain, path (e.g., the path \"/\"\nmakes the cookie valid for all documents on the server), security) which\nare collected in a list.\n"),(TypeInfo "CookieParam" [(("HTML","CookieExpire"),[(TCons ("Time","ClockTime") [])]),(("HTML","CookieDomain"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","CookiePath"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","CookieSecure"),[])] [] "HTML" "The possible parameters of a cookie.\n"),(TypeInfo "HtmlPage" [(("HTML","HtmlPage"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","PageParam") [])]),(TCons ("Prelude","[]") [(TCons ("HTML","HtmlExp") [])])])] [] "HTML" "The data type for representing HTML pages.\nThe constructor arguments are the title, the parameters, and\nthe contents (body) of the web page.\n"),(TypeInfo "PageParam" [(("HTML","PageEnc"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","PageCSS"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("HTML","PageJScript"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "HTML" "The possible parameters of an HTML page.\n")])