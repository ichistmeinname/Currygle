(CurryInfo (ModuleInfo "Char" "Michael Hanus" "Library with some useful functions on characters.\n\n") [(FunctionInfo "isUpper" (("Char","isUpper"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is an uppercase letter.\n" False UnknownFR),(FunctionInfo "isLower" (("Char","isLower"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is an lowercase letter.\n" False UnknownFR),(FunctionInfo "isAlpha" (("Char","isAlpha"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is a letter.\n" False UnknownFR),(FunctionInfo "isDigit" (("Char","isDigit"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is a decimal digit.\n" False UnknownFR),(FunctionInfo "isAlphaNum" (("Char","isAlphaNum"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is a letter or digit.\n" False UnknownFR),(FunctionInfo "isOctDigit" (("Char","isOctDigit"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is an octal digit.\n" False UnknownFR),(FunctionInfo "isHexDigit" (("Char","isHexDigit"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is a hexadecimal digit.\n" False UnknownFR),(FunctionInfo "isSpace" (("Char","isSpace"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) "Char" "Returns true if the argument is a white space.\n" False UnknownFR),(FunctionInfo "toUpper" (("Char","toUpper"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Char") []))) "Char" "Converts lowercase into uppercase letters.\n" False KnownRigid),(FunctionInfo "toLower" (("Char","toLower"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Char") []))) "Char" "Converts uppercase into lowercase letters.\n" False KnownRigid),(FunctionInfo "digitToInt" (("Char","digitToInt"),(FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Int") []))) "Char" "Converts a (hexadecimal) digit character into an integer.\n" False KnownRigid),(FunctionInfo "intToDigit" (("Char","intToDigit"),(FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Char") []))) "Char" "Converts an integer into a (hexadecimal) digit character.\n" False KnownRigid)] [])