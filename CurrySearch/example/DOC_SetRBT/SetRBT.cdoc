(CurryInfo (ModuleInfo "SetRBT" "Johannes Koj, Michael Hanus, Bernd Brassel" "Library with an implementation of sets as red-black trees.\n<P>\nAll the operations on sets are generic, i.e., one has to provide\nan explicit order predicate (\"<CODE>cmp</CODE>\" below) on elements.\n\n") [(FunctionInfo "emptySetRBT" (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)])) "SetRBT" "Returns an empty set, i.e., an empty red-black tree \naugmented with an order predicate.\n" False UnknownFR),(FunctionInfo "elemRBT" (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("Prelude","Bool") []))) "SetRBT" "Returns true if an element is contained in a (red-black tree) set.\n" False UnknownFR),(FunctionInfo "insertRBT" (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]))) "SetRBT" "Inserts an element into a set if it is not already there.\n" False UnknownFR),(FunctionInfo "insertMultiRBT" (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]))) "SetRBT" "Inserts an element into a multiset.\nThus, the same element can have several occurrences in the multiset.\n" False UnknownFR),(FunctionInfo "deleteRBT" (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]))) "SetRBT" "delete an element from a set.\nDeletes only a single element from a multi set\n" False UnknownFR),(FunctionInfo "setRBT2list" (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("Prelude","[]") [(TVar 0)])) "SetRBT" "Transforms a (red-black tree) set into an ordered list of its elements.\n" False UnknownFR),(FunctionInfo "unionRBT" (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]))) "SetRBT" "Computes the union of two (red-black tree) sets.\nThis is done by inserting all elements of the first set into the\nsecond set. \n" False UnknownFR),(FunctionInfo "intersectRBT" (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (FuncType (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]) (TCons ("RedBlackTree","RedBlackTree") [(TVar 0)]))) "SetRBT" "Computes the intersection of two (red-black tree) sets.\nThis is done by inserting all elements of the first set\ncontained in the second set into a new set, which order\nis taken from the first set.\n" False UnknownFR),(FunctionInfo "sortRBT" (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","[]") [(TVar 0)]))) "SetRBT" "Generic sort based on insertion into red-black trees.\nThe first argument is the order for the elements.\n" False UnknownFR)] [(TypeInfo "SetRBT" [(("SetRBT","SetRBT"),[(TCons ("RedBlackTree","RedBlackTree") [(TVar 0)])])] [0] "SetRBT" [] True)])