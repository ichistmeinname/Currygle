(CurryInfo (ModuleInfo "CompactFlatCurry" "Michael Hanus, Carsten Heine" "This module contains functions to reduce the size of FlatCurry programs\nby combining the main module and all imports into a single program\nthat contains only the functions directly or indirectly called from\na set of main functions.\n\n") [(FunctionInfo "requires" (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("CompactFlatCurry","RequiredSpec") []))) "CompactFlatCurry" "(fun `requires` reqfun) specifies that the use of the function \"fun\"\nimplies the application of function \"reqfun\".\n" False UnknownFR),(FunctionInfo "alwaysRequired" (FuncType (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) (TCons ("CompactFlatCurry","RequiredSpec") [])) "CompactFlatCurry" "(alwaysRequired fun) specifies that the function \"fun\" should be\nalways present if the corresponding module is loaded.\n" False UnknownFR),(FunctionInfo "defaultRequired" (TCons ("Prelude","[]") [(TCons ("CompactFlatCurry","RequiredSpec") [])]) "CompactFlatCurry" "Functions that are implicitly required in a FlatCurry program\n(since they might be generated by external functions like\n\"==\" or \"=:=\" on the fly).\n" False UnknownFR),(FunctionInfo "generateCompactFlatCurryFile" (FuncType (TCons ("Prelude","[]") [(TCons ("CompactFlatCurry","Option") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "CompactFlatCurry" "Computes a single FlatCurry program containing all functions potentially\ncalled from a set of main functions and writes it into a FlatCurry file.\nThis is done by merging all imported FlatCurry modules and removing\nthe imported functions that are definitely not used.\n" False UnknownFR),(FunctionInfo "computeCompactFlatCurry" (FuncType (TCons ("Prelude","[]") [(TCons ("CompactFlatCurry","Option") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("FlatCurry","Prog") [])]))) "CompactFlatCurry" "Computes a single FlatCurry program containing all functions potentially\ncalled from a set of main functions.\nThis is done by merging all imported FlatCurry modules (these are loaded\ndemand-driven so that modules that contains no potentially called functions\nare not loaded) and removing the imported functions that are definitely\nnot used.\n" False KnownRigid)] [(TypeInfo "Option" [(("CompactFlatCurry","Verbose"),[]),(("CompactFlatCurry","Main"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("CompactFlatCurry","Exports"),[]),(("CompactFlatCurry","InitFuncs"),[(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])]),(("CompactFlatCurry","Required"),[(TCons ("Prelude","[]") [(TCons ("CompactFlatCurry","RequiredSpec") [])])]),(("CompactFlatCurry","Import"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "CompactFlatCurry" "Options to guide the compactification process.\n" False),(TypeInfo "RequiredSpec" [] [] "CompactFlatCurry" "Data type to specify requirements of functions.\n" False)])