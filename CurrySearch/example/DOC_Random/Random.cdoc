(CurryInfo (ModuleInfo "Random" "Sergio Antoy (with extensions by Michael Hanus)" "Library for pseudo-random number generation in Curry.\n\nThis library provides operations for generating pseudo-random\nnumber sequences.\nFor any given seed, the sequences generated by the operations\nin this module should be **identical** to the sequences\ngenerated by the `java.util.Random package`.\n\nThe algorithm is a linear congruential pseudo-random number generator\ndescribed in\nDonald E. Knuth, _The Art of Computer Programming_,\nVolume 2: _Seminumerical Algorithms_, section 3.2.1.\n\n") [(FunctionInfo "nextInt" (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Int") [])])) "Random" "Returns a sequence of pseudorandom, uniformly distributed 32-bits\ninteger values.  All 2<font size=\"-1\"><sup>32</sup></font>\npossible integer values are produced with \n(approximately) equal probability.\n\n" False UnknownFR),(FunctionInfo "nextIntRange" (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Int") [])]))) "Random" "Returns a pseudorandom, uniformly distributed sequence of values\nbetween 0 (inclusive) and the specified value (exclusive).\nEach value is a 32-bits positive integer.\nAll `n` possible values are produced with (approximately) equal\nprobability.\n" False KnownRigid),(FunctionInfo "nextBoolean" (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Bool") [])])) "Random" "Returns a pseudorandom, uniformly distributed sequence of\nboolean values. The values `True` and `False` are produced with\n(approximately) equal probability. \n" False UnknownFR),(FunctionInfo "getRandomSeed" (TCons ("Prelude","IO") [(TCons ("Prelude","Int") [])]) "Random" "Returns a time-dependent integer number as a seed for really random numbers.\nShould only be used as a seed for pseudorandom number sequence\nand not as a random number since the precision is limited to milliseconds\n" False UnknownFR)] [])