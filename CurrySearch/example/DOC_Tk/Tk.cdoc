(CurryInfo (ModuleInfo "Tk" [] "Library for GUI programming in Curry (based on Tcl/Tk).\n<a href=\"http://www.informatik.uni-kiel.de/~mh/papers/PADL00.html\">\nThis paper</a> contains a description of the basic ideas\nbehind this library.\n\n") [(FunctionInfo "debugTcl" (FuncType (TCons ("Tk","TkWidget") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "Tk" [] False UnknownFR),(FunctionInfo "forkWish" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "Tk" "Initializes Tcl/Tk with some tcl text and ignores wish output.\n" False UnknownFR),(FunctionInfo "openWish" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])])])) "Tk" "Creates a new GUI window with a \"title\" for the top-level window\n(but unspecified contents). A GUI port is returned that can be\nused to start a GUI specification on this port\n(by the operations runWidgetOnPort, runWidgetOnPortInit, or\nrunControlledWidgetOnPort).\n" False UnknownFR),(FunctionInfo "runWidget" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "Tk" "IO action to run a TkWidget in a new GUI window.\n" False UnknownFR),(FunctionInfo "runWidgetInit" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]) (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "IO action to run a TkWidget in a new GUI window. The GUI events\nare processed after executing an initial action on the GUI.\n" False UnknownFR),(FunctionInfo "runWidgetPassive" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Tk","TkWidget") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])])]))) "Tk" "IO action to show a TkWidget in a new GUI window in passive mode,\ni.e., ignore all GUI events.\n" False UnknownFR),(FunctionInfo "runControlledWidget" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]),(FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Runs a TkWidget in a new GUI window and process GUI events.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runConfigControlledWidget" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]),(FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Tk","TkRefType") []),(TCons ("Tk","TkConfItem") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])])])])])))]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Runs a TkWidget in a new GUI window and process GUI events.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runControlledWidgetInit" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","(,)") [(TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]),(FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))]) (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "Tk" "Runs a TkWidget in a new GUI window and process GUI events\nafter executing an initial comment on the GUI window.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThis operation is useful to run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runWidgetOnPort" (FuncType (TCons ("Tk","TkWidget") [(TCons ("Prelude","Success") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") []))) "Tk" "Runs a TkWidget on a GUI window that was previously created\nby the operation \"openWish\".\nThis is useful to execute a GUI in parallel to other concurrent\nprocesses.\n" False UnknownFR),(FunctionInfo "runControlledWidgetOnPort" (FuncType (TCons ("Prelude","(,)") [(TCons ("Tk","TkWidget") [(TCons ("Prelude","Success") [])]),(FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))]) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Runs a TkWidget on a GUI window that was previously created\nby the operation \"openWish\".\nThis is useful to execute a GUI in parallel to other concurrent\nprocesses.\nIn addition, an event handler is provided that process\nmessages received from an external message stream.\nThus, one can run a GUI that should react on\nuser events as well as messages sent to an external port.\n" False KnownFlex),(FunctionInfo "runWidgetOnPortInit" (FuncType (TCons ("Tk","TkWidget") [(TCons ("Prelude","Success") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])) (TCons ("Prelude","Success") [])))) "Tk" "Runs a TkWidget on a GUI window that was previously created\nby the operation \"openWish\".\nThis is useful to execute a GUI in parallel to other concurrent\nprocesses.\nThe GUI is actually started after executing an initial command for the GUI.\n" False UnknownFR),(FunctionInfo "tkConfig" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Tk","TkConfItem") [(TVar 0)]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Changes the current configuration of a widget\n(deprecated operation, only included for backward compatibility).\nWarning: does not work for TkCmd options!\n" False KnownFlex),(FunctionInfo "tkCConfig" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Tk","TkConfItem") [(TVar 0)]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Changes the current configuration of a widget\n(deprecated operation, only included for backward compatibility).\nWarning: does not work for TkCmd options!\n" False KnownFlex),(FunctionInfo "tkVoid" (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "Tk" "An event handler that does nothing.\n" False UnknownFR),(FunctionInfo "tkExit" (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "Tk" "An event handler for terminating the GUI.\n" False UnknownFR),(FunctionInfo "tkGetValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]))) "Tk" "Gets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "tkSetValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Sets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "tkUpdate" (FuncType (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Updates the (String) value of a variable w.r.t. to an update function.\n" False UnknownFR),(FunctionInfo "tkAppendValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Appends a String value to the contents of a TextEdit widget and\nadjust the view to the end of the TextEdit widget.\n" False ConflictFR),(FunctionInfo "tkAppendTaggedValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))))) "Tk" "This is an experimental function and might be changed in the future.\nAppends a String value with tags to the contents of a TextEdit widget and\nadjust the view to the end of the TextEdit widget.\n" False ConflictFR),(FunctionInfo "tkFocus" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])]))) "Tk" "Sets the input focus of this GUI to the widget referred by the first\nargument.\nThis is useful for automatically selecting input entries in an application.\n" False KnownFlex),(FunctionInfo "tkAddCanvas" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkCanvasItem") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])))) "Tk" "Adds a list of canvas items to a canvas referred by the first argument.\n" False KnownFlex),(FunctionInfo "tkCVoid" (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])) "Tk" "An event handler that does nothing.\n" False UnknownFR),(FunctionInfo "tkCExit" (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])) "Tk" "An event handler for terminating the GUI.\n" False UnknownFR),(FunctionInfo "tkCGetValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Gets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "tkCSetValue" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Sets the (String) value of a variable in a GUI.\n" False KnownFlex),(FunctionInfo "tkCUpdate" (FuncType (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Updates the (String) value of a variable w.r.t. to an update function.\n" False UnknownFR),(FunctionInfo "tkCFocus" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") []))) "Tk" "Sets the input focus of this GUI to the widget referred by the first\nargument.\nThis is useful for automatically selecting input entries in an application.\n" False KnownFlex),(FunctionInfo "tkCAddCanvas" (FuncType (TCons ("Tk","TkRefType") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkCanvasItem") [])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","Success") [])))) "Tk" "Adds a list of canvas items to a canvas referred by the first argument.\n" False KnownFlex),(FunctionInfo "popup_message" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "Tk" "A simple popup message.\n" False UnknownFR),(FunctionInfo "TkCmd" (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TVar 0)) (TCons ("Tk","TkConfItem") [(TVar 0)])) "Tk" "A simple event handler that can be associated to a widget.\nThe event handler takes a GUI port as parameter in order to\nread or write values from/into the GUI.\n" False UnknownFR),(FunctionInfo "TkConfigCmd" (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Tk","TkRefType") []),(TCons ("Tk","TkConfItem") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])])])])])) (TCons ("Tk","TkConfItem") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])])) "Tk" "An event handler that can be associated to a widget.\nThe event handler takes a GUI port as parameter (in order to\nread or write values from/into the GUI) and returns a list\nof widget reference/configuration pairs\nwhich is applied after the handler in order to configure some GUI widgets.\n" False UnknownFR),(FunctionInfo "TkButton" (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])]) (TCons ("Tk","TkWidget") [(TVar 0)]))) "Tk" "A button with an associated event handler which is activated\nif the button is pressed.\n" False UnknownFR),(FunctionInfo "TkConfigButton" (FuncType (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Tk","TkRefType") []),(TCons ("Tk","TkConfItem") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])])])])])) (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])])]) (TCons ("Tk","TkWidget") [(TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])]))) "Tk" "A button with an associated event handler which is activated\nif the button is pressed. The event handler is a configuration handler\n(see TkConfigCmd) that allows the configuration of some widgets.\n" False UnknownFR),(FunctionInfo "TkTextEditScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])]) (TCons ("Tk","TkWidget") [(TVar 0)])) "Tk" "A text edit widget with vertical and horizontal scrollbars.\nThe argument contains the configuration options for the text edit widget.\n" False UnknownFR),(FunctionInfo "TkCanvasScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])]) (TCons ("Tk","TkWidget") [(TVar 0)])) "Tk" "A canvas widget with vertical and horizontal scrollbars.\nThe argument contains the configuration options for the text edit widget.\n" False UnknownFR),(FunctionInfo "TkEntryScroll" (FuncType (TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])]) (TCons ("Tk","TkWidget") [(TVar 0)])) "Tk" "An entry widget with a horizontal scrollbar.\nThe argument contains the configuration options for the entry widget.\n" False UnknownFR),(FunctionInfo "tkGetOpenFile" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "Tk" "Pops up a GUI for selecting an existing file.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "tkGetOpenFileWithTypes" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "Tk" "Pops up a GUI for selecting an existing file. The parameter is\na list of pairs of file types that could be selected.\nA file type pair consists of a name and an extension for that file type.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "tkGetSaveFile" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "Tk" "Pops up a GUI for choosing a file to save some data.\nIf the user chooses an existing file, she/he will asked to confirm\nto overwrite it.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "tkGetSaveFileWithTypes" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]) (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "Tk" "Pops up a GUI for choosing a file to save some data. The parameter is\na list of pairs of file types that could be selected.\nA file type pair consists of a name and an extension for that file type.\nIf the user chooses an existing file, she/he will asked to confirm\nto overwrite it.\nThe file with its full path name will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR),(FunctionInfo "tkChooseColor" (TCons ("Prelude","IO") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]) "Tk" "Pops up a GUI dialog box to select a color.\nThe name of the color will be returned (or \"\" if the user\ncancels the selection).\n" False UnknownFR)] [(TypeInfo "TkWidget" [(("Tk","TkPlainButton"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkCanvas"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkCheckButton"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkEntry"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkLabel"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkListBox"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkMessage"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkMenuButton"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkScale"),[(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkScrollV"),[(TCons ("Tk","TkRefType") []),(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkScrollH"),[(TCons ("Tk","TkRefType") []),(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkTextEdit"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfItem") [(TVar 0)])])]),(("Tk","TkRow"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("Tk","TkWidget") [(TVar 0)])])]),(("Tk","TkCol"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("Tk","TkWidget") [(TVar 0)])])]),(("Tk","TkMatrix"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkConfCollection") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Tk","TkWidget") [(TVar 0)])])])])] [0] "Tk" "The type of possible widgets in a GUI.\n\"a\" is the result type of event handlers, currently \"IO ()\" or \"Success\".\n" False),(TypeInfo "TkConfItem" [(("Tk","TkActive"),[(TCons ("Prelude","Bool") [])]),(("Tk","TkAnchor"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkBackground"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkForeground"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkHandler"),[(FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Tk","TkRefType") []),(TCons ("Tk","TkConfItem") [(TVar 0)])])]) (FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TVar 0)))]),(("Tk","TkHeight"),[(TCons ("Prelude","Int") [])]),(("Tk","TkInit"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkItems"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkCanvasItem") [])])]),(("Tk","TkList"),[(TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])]),(("Tk","TkMenu"),[(TCons ("Prelude","[]") [(TCons ("Tk","TkMenuItem") [(TVar 0)])])]),(("Tk","TkRef"),[(TCons ("Tk","TkRefType") [])]),(("Tk","TkText"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkWidth"),[(TCons ("Prelude","Int") [])]),(("Tk","TkFill"),[]),(("Tk","TkFillX"),[]),(("Tk","TkFillY"),[]),(("Tk","TkTcl"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [0] "Tk" "The data type for possible configurations of a widget.\n" False),(TypeInfo "TkConfCollection" [(("Tk","TkCenter"),[]),(("Tk","TkLeft"),[]),(("Tk","TkRight"),[]),(("Tk","TkTop"),[]),(("Tk","TkBottom"),[])] [] "Tk" "The data type for possible configurations of a collection of widgets.\n" False),(TypeInfo "TkMenuItem" [(("Tk","TkMButton"),[(FuncType (TCons ("Ports","Port") [(TCons ("Ports","SP_Msg") [])]) (TVar 0)),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkMSeparator"),[]),(("Tk","TkMMenuButton"),[(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Tk","TkMenuItem") [(TVar 0)])])])] [0] "Tk" "The data type for specifying items in a menu.\n" False),(TypeInfo "TkCanvasItem" [(("Tk","TkLine"),[(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkPolygon"),[(TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkRectangle"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkOval"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])]),(("Tk","TkCText"),[(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","Int") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])] [] "Tk" "The data type of items in a canvas.\nThe last argument are further options in Tcl/Tk (for testing).\n" False),(TypeInfo "TkRefType" [] [] "Tk" "The (hidden) data type of references to a widget in a Tk window.\nNote that the constructor TkRefLabel will not be exported so that values\ncan only be created inside this module.\n" False)])