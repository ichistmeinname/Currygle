(CurryInfo (ModuleInfo "FlatTools" "Michael Hanus" "Some tools to support meta-programming in Curry based on FlatCurry.\n\nThis library contains\n<UL>\n<LI> a show function for a string representation of FlatCurry programs\n  (function \"showFlatProg\")\n\n<LI> a function for showing FlatCurry expressions in (almost) Curry syntax\n  (function \"showCurryExpr\")\n</UL>\n\nNote that the previously contained function \"writeFLC\"\nis no longer supported. Use Flat2Fcy.writeFCY instead\nand change file suffix into \".fcy\"!\n\n") [(FunctionInfo "showFlatProg" (FuncType (TCons ("Flat","Prog") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) "FlatTools" "Shows a FlatCurry program term as a string (with some pretty printing).\n" False ConflictFR),(FunctionInfo "showCurryType" (FuncType (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Flat","TypeExpr") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])))) "FlatTools" "Shows a FlatCurry type in Curry syntax.\n\n" False ConflictFR),(FunctionInfo "showCurryExpr" (FuncType (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Flat","Expr") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]))))) "FlatTools" "Shows a FlatCurry expressions in (almost) Curry syntax.\n\n" False ConflictFR),(FunctionInfo "showCurryVar" (FuncType (TVar 0) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) "FlatTools" [] False UnknownFR)] [])