(CurryInfo (ModuleInfo "NamedSocket" "Michael Hanus" "Library to support network programming with sockets that are addressed\nby symbolic names. In contrast to raw sockets (see library\n<code>Socket</code>), this library uses the Curry Port Name Server\nto provide sockets that are addressed by symbolic names\nrather than numbers.\n\nIn standard applications, the server side uses the operations\n<code>listenOn</code> and <code>socketAccept</code> to provide some service\non a named socket, and the client side uses the operation\n<code>connectToSocket</code> to request a service.\n\n") [(FunctionInfo "listenOn" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("NamedSocket","Socket") [])])) "NamedSocket" "Creates a server side socket with a symbolic name.\n" False UnknownFR),(FunctionInfo "socketAccept" (FuncType (TCons ("NamedSocket","Socket") []) (TCons ("Prelude","IO") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("IO","Handle") [])])])) "NamedSocket" "Returns a connection of a client to a socket.\nThe connection is returned as a pair consisting of a string identifying\nthe client (the format of this string is implementation-dependent)\nand a handle to a stream communication with the client.\nThe handle is both readable and writable.\n" False KnownFlex),(FunctionInfo "waitForSocketAccept" (FuncType (TCons ("NamedSocket","Socket") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [(TCons ("Prelude","Maybe") [(TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("IO","Handle") [])])])]))) "NamedSocket" "Waits until a connection of a client to a socket is available.\nIf no connection is available within the time limit, it returns Nothing,\notherwise the connection is returned as a pair consisting\nof a string identifying the client\n(the format of this string is implementation-dependent)\nand a handle to a stream communication with the client.\n" False KnownFlex),(FunctionInfo "sClose" (FuncType (TCons ("NamedSocket","Socket") []) (TCons ("Prelude","IO") [(TCons ("Prelude","()") [])])) "NamedSocket" "Closes a server socket.\n" False KnownFlex),(FunctionInfo "socketName" (FuncType (TCons ("NamedSocket","Socket") []) (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])) "NamedSocket" "Returns a the symbolic name of a named socket.\n" False KnownFlex),(FunctionInfo "connectToSocketRepeat" (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","IO") [(TVar 0)]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("Prelude","Maybe") [(TCons ("IO","Handle") [])])]))))) "NamedSocket" "Waits for connection to a Unix socket with a symbolic name.\nIn contrast to <code>connectToSocket</code>, this action waits until\nthe socket has been registered with its symbolic name.\n" False UnknownFR),(FunctionInfo "connectToSocketWait" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("IO","Handle") [])])) "NamedSocket" "Waits for connection to a Unix socket with a symbolic name and\nreturn the handle of the connection.\nThis action waits (possibly forever) until the socket with the symbolic\nname is registered.\n" False UnknownFR),(FunctionInfo "connectToSocket" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","IO") [(TCons ("IO","Handle") [])])) "NamedSocket" "Creates a new connection to an existing(!) Unix socket with a symbolic\nname. If the symbolic name is not registered, an error is reported.\n" False UnknownFR)] [(TypeInfo "Socket" [] [] "NamedSocket" "Abstract type for named sockets.\n" False)])