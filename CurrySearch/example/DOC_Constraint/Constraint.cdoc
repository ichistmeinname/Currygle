(CurryInfo (ModuleInfo "Constraint" "Michael Hanus" "Some useful operations for constraint programming.\n\n") [(FunctionInfo "<:" (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Success") []))) "Constraint" "Less-than on ground data terms as a constraint.\n" False UnknownFR),(FunctionInfo ">:" (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Success") []))) "Constraint" "Greater-than on ground data terms as a constraint.\n" False UnknownFR),(FunctionInfo "<=:" (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Success") []))) "Constraint" "Less-or-equal on ground data terms as a constraint.\n" False UnknownFR),(FunctionInfo ">=:" (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Success") []))) "Constraint" "Greater-or-equal on ground data terms as a constraint.\n" False UnknownFR),(FunctionInfo "andC" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Success") [])]) (TCons ("Prelude","Success") [])) "Constraint" "Evaluates the conjunction of a list of constraints.\n" False UnknownFR),(FunctionInfo "orC" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Success") [])]) (TCons ("Prelude","Success") [])) "Constraint" "Evaluates the disjunction of a list of constraints.\n" False UnknownFR),(FunctionInfo "allC" (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","Success") []))) "Constraint" "Is a given constraint abstraction satisfied by all elements in a list?\n" False UnknownFR),(FunctionInfo "anyC" (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Prelude","Success") []))) "Constraint" "Is there an element in a list satisfying a given constraint?\n" False UnknownFR)] [])