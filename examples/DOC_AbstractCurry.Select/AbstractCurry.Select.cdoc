(CurryInfo (ModuleInfo "AbstractCurry.Select" "" "This library provides some useful operations to select components\nin AbstractCurry programs, i.e., it provides a collection of\nselector functions for AbstractCurry.\n\n") [(FunctionInfo "typeName" (FuncType (TCons ("AbstractCurry.Types","CTypeDecl") []) (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "AbstractCurry.Select" "Returns the name of a given type declaration\n" False KnownFlex),(FunctionInfo "typeVis" (FuncType (TCons ("AbstractCurry.Types","CTypeDecl") []) (TCons ("AbstractCurry.Types","CVisibility") [])) "AbstractCurry.Select" "Returns the visibility of a given type declaration\n" False KnownFlex),(FunctionInfo "typeCons" (FuncType (TCons ("AbstractCurry.Types","CTypeDecl") []) (TCons ("Prelude","[]") [(TCons ("AbstractCurry.Types","CConsDecl") [])])) "AbstractCurry.Select" "Returns the constructors of a given type declaration\n" False KnownFlex),(FunctionInfo "consName" (FuncType (TCons ("AbstractCurry.Types","CConsDecl") []) (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "AbstractCurry.Select" "Returns the name of a given constructor declaration\n" False KnownFlex),(FunctionInfo "consVis" (FuncType (TCons ("AbstractCurry.Types","CConsDecl") []) (TCons ("AbstractCurry.Types","CVisibility") [])) "AbstractCurry.Select" "Returns the visibility of a given constructor declaration\n" False KnownFlex),(FunctionInfo "isBaseType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Returns true if the type expression is a base type.\n" False KnownRigid),(FunctionInfo "isPolyType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Returns true if the type expression contains type variables.\n" False KnownFlex),(FunctionInfo "isFunctionalType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Returns true if the type expression is a functional type.\n" False KnownRigid),(FunctionInfo "isIOType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Returns true if the type expression is (IO t).\n" False KnownRigid),(FunctionInfo "isIOReturnType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Returns true if the type expression is (IO t) with t/=() and\nt is not functional\n" False KnownFlex),(FunctionInfo "argTypes" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","[]") [(TCons ("AbstractCurry.Types","CTypeExpr") [])])) "AbstractCurry.Select" "Returns all argument types from a functional type\n" False KnownFlex),(FunctionInfo "resultType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("AbstractCurry.Types","CTypeExpr") [])) "AbstractCurry.Select" "Return the result type from a (nested) functional type\n" False KnownFlex),(FunctionInfo "tvarsOfType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns all type variables occurring in a type expression.\n" False KnownFlex),(FunctionInfo "modsOfType" (FuncType (TCons ("AbstractCurry.Types","CTypeExpr") []) (TCons ("Prelude","[]") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "AbstractCurry.Select" "Returns all modules used in the given type.\n" False KnownFlex),(FunctionInfo "funcName" (FuncType (TCons ("AbstractCurry.Types","CFuncDecl") []) (TCons ("Prelude","(,)") [(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])) "AbstractCurry.Select" "Returns the name of a given function declaration\n" False KnownFlex),(FunctionInfo "funcVis" (FuncType (TCons ("AbstractCurry.Types","CFuncDecl") []) (TCons ("AbstractCurry.Types","CVisibility") [])) "AbstractCurry.Select" "Returns the visibility of a given function declaration\n" False KnownFlex),(FunctionInfo "varsOfPat" (FuncType (TCons ("AbstractCurry.Types","CPattern") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a pattern.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfExp" (FuncType (TCons ("AbstractCurry.Types","CExpr") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in an expression.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfRhs" (FuncType (TCons ("AbstractCurry.Types","CRhs") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a right-hand side.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfStat" (FuncType (TCons ("AbstractCurry.Types","CStatement") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a statement.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfLDecl" (FuncType (TCons ("AbstractCurry.Types","CLocalDecl") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a local declaration.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfFDecl" (FuncType (TCons ("AbstractCurry.Types","CFuncDecl") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a function declaration.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "varsOfRule" (FuncType (TCons ("AbstractCurry.Types","CRule") []) (TCons ("Prelude","[]") [(TCons ("Prelude","(,)") [(TCons ("Prelude","Int") []),(TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])])])])) "AbstractCurry.Select" "Returns list of all variables occurring in a rule.\nEach occurrence corresponds to one element, i.e., the list might\ncontain multiple elements.\n" False KnownFlex),(FunctionInfo "isPrelude" (FuncType (TCons ("Prelude","[]") [(TCons ("Prelude","Char") [])]) (TCons ("Prelude","Bool") [])) "AbstractCurry.Select" "Tests whether a module name is the prelude.\n" False UnknownFR)] [])