(CurryInfo (ModuleInfo "Dequeue" "Bernd Brassel, Olaf Chitil, Michael Hanus, Sebastian Fischer,\n        Bj\246rn Peem\246ller" "An implementation of double-ended queues supporting access at both\nends in constant amortized time.\n\n") [(FunctionInfo "empty" (TCons ("Dequeue","Queue") [(TVar 0)]) "Dequeue" "The empty queue.\n" False UnknownFR),(FunctionInfo "cons" (FuncType (TVar 0) (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)]))) "Dequeue" "Inserts an element at the front of the queue.\n" False KnownFlex),(FunctionInfo "snoc" (FuncType (TVar 0) (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)]))) "Dequeue" "Inserts an element at the end of the queue.\n" False KnownFlex),(FunctionInfo "isEmpty" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Prelude","Bool") [])) "Dequeue" "Is the queue empty?\n" False KnownFlex),(FunctionInfo "deqLength" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Prelude","Int") [])) "Dequeue" "Returns the number of elements in the queue.\n" False KnownFlex),(FunctionInfo "deqHead" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TVar 0)) "Dequeue" "The first element of the queue.\n" False ConflictFR),(FunctionInfo "deqTail" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)])) "Dequeue" "Removes an element at the front of the queue.\n" False KnownFlex),(FunctionInfo "deqLast" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TVar 0)) "Dequeue" "The last element of the queue.\n" False ConflictFR),(FunctionInfo "deqInit" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)])) "Dequeue" "Removes an element at the end of the queue.\n" False KnownFlex),(FunctionInfo "deqReverse" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)])) "Dequeue" "Reverses a double ended queue.\n" False KnownFlex),(FunctionInfo "rotate" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)])) "Dequeue" "Moves the first element to the end of the queue.\n" False UnknownFR),(FunctionInfo "matchHead" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Prelude","Maybe") [(TCons ("Prelude","(,)") [(TVar 0),(TCons ("Dequeue","Queue") [(TVar 0)])])])) "Dequeue" "Matches the front of a queue.\n<code>matchHead q</code> is equivalent to\n<code>if isEmpty q then Nothing else Just (deqHead q, deqTail q)</code>\nbut more efficient.\n" False KnownFlex),(FunctionInfo "matchLast" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Prelude","Maybe") [(TCons ("Prelude","(,)") [(TVar 0),(TCons ("Dequeue","Queue") [(TVar 0)])])])) "Dequeue" "Matches the end of a queue.\n<code>matchLast q</code> is equivalent to\n<code>if isEmpty q then Nothing else Just (deqLast q,deqInit q)</code>\nbut more efficient.\n" False KnownFlex),(FunctionInfo "listToDeq" (FuncType (TCons ("Prelude","[]") [(TVar 0)]) (TCons ("Dequeue","Queue") [(TVar 0)])) "Dequeue" "Transforms a list to a double ended queue.\n" False UnknownFR),(FunctionInfo "deqToList" (FuncType (TCons ("Dequeue","Queue") [(TVar 0)]) (TCons ("Prelude","[]") [(TVar 0)])) "Dequeue" "Transforms a double ended queue to a list.\n" False KnownFlex)] [(TypeInfo "Queue" [] [0] "Dequeue" "The datatype of a queue.\n" False)])